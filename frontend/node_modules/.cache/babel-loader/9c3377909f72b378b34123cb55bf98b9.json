{"ast":null,"code":"/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { hasChildren, isDocument } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isTag, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort } from 'domutils';\nconst reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n  var _a;\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n  const context = this.toArray();\n  if (typeof selectorOrHaystack !== 'string') {\n    const haystack = isCheerio(selectorOrHaystack) ? selectorOrHaystack.toArray() : [selectorOrHaystack];\n    return this._make(haystack.filter(elem => context.some(node => contains(node, elem))));\n  }\n  const elems = reSiblingSelector.test(selectorOrHaystack) ? context : this.children().toArray();\n  const options = {\n    context,\n    root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    // Pass options that are recognized by `cheerio-select`\n    xmlMode: this.options.xmlMode,\n    lowerCaseTags: this.options.lowerCaseTags,\n    lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n    pseudos: this.options.pseudos,\n    quirksMode: this.options.quirksMode\n  };\n  return this._make(select.select(selectorOrHaystack, elems, options));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n  return function (fn) {\n    for (var _len = arguments.length, postFns = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      postFns[_key - 1] = arguments[_key];\n    }\n    return function (selector) {\n      var _a;\n      let matched = matchMap(fn, this);\n      if (selector) {\n        matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n      }\n      return this._make(\n      // Post processing is only necessary if there is more than one element.\n      this.length > 1 && matched.length > 1 ? postFns.reduce((elems, fn) => fn(elems), matched) : matched);\n    };\n  };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n  const ret = [];\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    ret.push(value);\n  }\n  return new Array().concat(...ret);\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n  const ret = [];\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value !== null) {\n      ret.push(value);\n    }\n  }\n  return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem) {\n  // We use a variable here that is used from within the matcher.\n  let matches = null;\n  for (var _len2 = arguments.length, postFns = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    postFns[_key2 - 1] = arguments[_key2];\n  }\n  const innerMatcher = _getMatcher((nextElem, elems) => {\n    const matched = [];\n    domEach(elems, elem => {\n      for (let next; next = nextElem(elem); elem = next) {\n        // FIXME: `matched` might contain duplicates here and the index is too large.\n        if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length)) break;\n        matched.push(next);\n      }\n    });\n    return matched;\n  })(nextElem, ...postFns);\n  return function (selector, filterSelector) {\n    // Override `matches` variable with the new target.\n    matches = typeof selector === 'string' ? elem => select.is(elem, selector, this.options) : selector ? getFilterFn(selector) : null;\n    const ret = innerMatcher.call(this, filterSelector);\n    // Set `matches` to `null`, so we don't waste memory.\n    matches = null;\n    return ret;\n  };\n}\nfunction _removeDuplicates(elems) {\n  return Array.from(new Set(elems));\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(_ref => {\n  let {\n    parent\n  } = _ref;\n  return parent && !isDocument(parent) ? parent : null;\n}, _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher(elem => {\n  const matched = [];\n  while (elem.parent && !isDocument(elem.parent)) {\n    matched.push(elem.parent);\n    elem = elem.parent;\n  }\n  return matched;\n}, uniqueSort, elems => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(_ref2 => {\n  let {\n    parent\n  } = _ref2;\n  return parent && !isDocument(parent) ? parent : null;\n}, uniqueSort, elems => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n  var _a;\n  const set = [];\n  if (!selector) {\n    return this._make(set);\n  }\n  const selectOpts = {\n    xmlMode: this.options.xmlMode,\n    root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]\n  };\n  const selectFn = typeof selector === 'string' ? elem => select.is(elem, selector, selectOpts) : getFilterFn(selector);\n  domEach(this, elem => {\n    while (elem && isTag(elem)) {\n      if (selectFn(elem, 0)) {\n        // Do not add duplicate elements to the set\n        if (!set.includes(elem)) {\n          set.push(elem);\n        }\n        break;\n      }\n      elem = elem.parent;\n    }\n  });\n  return this._make(set);\n}\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher(elem => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher(elem => {\n  const matched = [];\n  while (elem.next) {\n    elem = elem.next;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil(el => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher(elem => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher(elem => {\n  const matched = [];\n  while (elem.prev) {\n    elem = elem.prev;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil(el => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher(elem => getSiblings(elem).filter(el => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher(elem => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n  const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n  return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n  let i = 0;\n  const len = this.length;\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n  return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n  let elems = [];\n  for (let i = 0; i < this.length; i++) {\n    const el = this[i];\n    const val = fn.call(el, i, el);\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n  return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return (el, i) => match.call(el, i, el);\n  }\n  if (isCheerio(match)) {\n    return el => Array.prototype.includes.call(match, el);\n  }\n  return function (el) {\n    return match === el;\n  };\n}\nexport function filter(match) {\n  var _a;\n  return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n  return typeof match === 'string' ? select.filter(match, nodes, {\n    xmlMode,\n    root\n  }) : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Attributes\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n  const nodes = this.toArray();\n  return typeof selector === 'string' ? select.some(nodes.filter(isTag), selector, this.options) : selector ? nodes.some(getFilterFn(selector)) : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n  let nodes = this.toArray();\n  if (typeof match === 'string') {\n    const matches = new Set(select.filter(match, nodes, this.options));\n    nodes = nodes.filter(el => !matches.has(el));\n  } else {\n    const filterFn = getFilterFn(match);\n    nodes = nodes.filter((el, i) => !filterFn(el, i));\n  }\n  return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n  return this.filter(typeof selectorOrHaystack === 'string' ?\n  // Using the `:has` selector here short-circuits searches.\n  `:has(${selectorOrHaystack})` : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n  return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n  return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n  var _a;\n  i = +i;\n  // Use the first identity optimization if possible\n  if (i === 0 && this.length <= 1) return this;\n  if (i < 0) i = this.length + i;\n  return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n  if (i == null) {\n    return this.toArray();\n  }\n  return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n  return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n  let $haystack;\n  let needle;\n  if (selectorOrNeedle == null) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    $haystack = this;\n    needle = isCheerio(selectorOrNeedle) ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n  return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n  return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n  var _a;\n  return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n  const selection = this._make(other, context);\n  const contents = uniqueSort([...this.get(), ...selection.get()]);\n  return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n  return this.prevObject ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject) : this;\n}","map":{"version":3,"sources":["api/traversing.ts"],"names":[],"mappings":"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","sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sourcesContent":["/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { hasChildren, isDocument, } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isTag, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort, } from 'domutils';\nconst reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n    var _a;\n    if (!selectorOrHaystack) {\n        return this._make([]);\n    }\n    const context = this.toArray();\n    if (typeof selectorOrHaystack !== 'string') {\n        const haystack = isCheerio(selectorOrHaystack)\n            ? selectorOrHaystack.toArray()\n            : [selectorOrHaystack];\n        return this._make(haystack.filter((elem) => context.some((node) => contains(node, elem))));\n    }\n    const elems = reSiblingSelector.test(selectorOrHaystack)\n        ? context\n        : this.children().toArray();\n    const options = {\n        context,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n        // Pass options that are recognized by `cheerio-select`\n        xmlMode: this.options.xmlMode,\n        lowerCaseTags: this.options.lowerCaseTags,\n        lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n        pseudos: this.options.pseudos,\n        quirksMode: this.options.quirksMode,\n    };\n    return this._make(select.select(selectorOrHaystack, elems, options));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n    return function (fn, ...postFns) {\n        return function (selector) {\n            var _a;\n            let matched = matchMap(fn, this);\n            if (selector) {\n                matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n            }\n            return this._make(\n            // Post processing is only necessary if there is more than one element.\n            this.length > 1 && matched.length > 1\n                ? postFns.reduce((elems, fn) => fn(elems), matched)\n                : matched);\n        };\n    };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        ret.push(value);\n    }\n    return new Array().concat(...ret);\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value !== null) {\n            ret.push(value);\n        }\n    }\n    return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n    // We use a variable here that is used from within the matcher.\n    let matches = null;\n    const innerMatcher = _getMatcher((nextElem, elems) => {\n        const matched = [];\n        domEach(elems, (elem) => {\n            for (let next; (next = nextElem(elem)); elem = next) {\n                // FIXME: `matched` might contain duplicates here and the index is too large.\n                if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length))\n                    break;\n                matched.push(next);\n            }\n        });\n        return matched;\n    })(nextElem, ...postFns);\n    return function (selector, filterSelector) {\n        // Override `matches` variable with the new target.\n        matches =\n            typeof selector === 'string'\n                ? (elem) => select.is(elem, selector, this.options)\n                : selector\n                    ? getFilterFn(selector)\n                    : null;\n        const ret = innerMatcher.call(this, filterSelector);\n        // Set `matches` to `null`, so we don't waste memory.\n        matches = null;\n        return ret;\n    };\n}\nfunction _removeDuplicates(elems) {\n    return Array.from(new Set(elems));\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({ parent }) => (parent && !isDocument(parent) ? parent : null), _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher((elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n        matched.push(elem.parent);\n        elem = elem.parent;\n    }\n    return matched;\n}, uniqueSort, (elems) => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({ parent }) => (parent && !isDocument(parent) ? parent : null), uniqueSort, (elems) => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n    var _a;\n    const set = [];\n    if (!selector) {\n        return this._make(set);\n    }\n    const selectOpts = {\n        xmlMode: this.options.xmlMode,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    };\n    const selectFn = typeof selector === 'string'\n        ? (elem) => select.is(elem, selector, selectOpts)\n        : getFilterFn(selector);\n    domEach(this, (elem) => {\n        while (elem && isTag(elem)) {\n            if (selectFn(elem, 0)) {\n                // Do not add duplicate elements to the set\n                if (!set.includes(elem)) {\n                    set.push(elem);\n                }\n                break;\n            }\n            elem = elem.parent;\n        }\n    });\n    return this._make(set);\n}\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher((elem) => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.next) {\n        elem = elem.next;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil((el) => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher((elem) => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.prev) {\n        elem = elem.prev;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil((el) => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher((elem) => getSiblings(elem).filter((el) => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher((elem) => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n    const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n    return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n    let i = 0;\n    const len = this.length;\n    while (i < len && fn.call(this[i], i, this[i]) !== false)\n        ++i;\n    return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n    let elems = [];\n    for (let i = 0; i < this.length; i++) {\n        const el = this[i];\n        const val = fn.call(el, i, el);\n        if (val != null) {\n            elems = elems.concat(val);\n        }\n    }\n    return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n    if (typeof match === 'function') {\n        return (el, i) => match.call(el, i, el);\n    }\n    if (isCheerio(match)) {\n        return (el) => Array.prototype.includes.call(match, el);\n    }\n    return function (el) {\n        return match === el;\n    };\n}\nexport function filter(match) {\n    var _a;\n    return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n    return typeof match === 'string'\n        ? select.filter(match, nodes, { xmlMode, root })\n        : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Attributes\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n    const nodes = this.toArray();\n    return typeof selector === 'string'\n        ? select.some(nodes.filter(isTag), selector, this.options)\n        : selector\n            ? nodes.some(getFilterFn(selector))\n            : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n    let nodes = this.toArray();\n    if (typeof match === 'string') {\n        const matches = new Set(select.filter(match, nodes, this.options));\n        nodes = nodes.filter((el) => !matches.has(el));\n    }\n    else {\n        const filterFn = getFilterFn(match);\n        nodes = nodes.filter((el, i) => !filterFn(el, i));\n    }\n    return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n    return this.filter(typeof selectorOrHaystack === 'string'\n        ? // Using the `:has` selector here short-circuits searches.\n            `:has(${selectorOrHaystack})`\n        : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1)\n        return this;\n    if (i < 0)\n        i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n    if (i == null) {\n        return this.toArray();\n    }\n    return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n    return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n    let $haystack;\n    let needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    }\n    else if (typeof selectorOrNeedle === 'string') {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        $haystack = this;\n        needle = isCheerio(selectorOrNeedle)\n            ? selectorOrNeedle[0]\n            : selectorOrNeedle;\n    }\n    return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n    const selection = this._make(other, context);\n    const contents = uniqueSort([...this.get(), ...selection.get()]);\n    return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n    return this.prevObject\n        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n        : this;\n}\n//# sourceMappingURL=traversing.js.map"]},"metadata":{},"sourceType":"module"}