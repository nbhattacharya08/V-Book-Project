{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderconstants\";\nexport const CreateOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult, userid) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/orders/${orderId}/pay?id=${userid}`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","CreateOrder","order","dispatch","getState","type","token","config","headers","Authorization","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","userid","put","listMyOrders","listOrders"],"sources":["C:/React-Project/V-Book/frontend/src/redux/actions/orderActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n\tORDER_CREATE_FAIL,\r\n\tORDER_CREATE_REQUEST,\r\n\tORDER_CREATE_SUCCESS,\r\n\tORDER_DETAILS_FAIL,\r\n\tORDER_DETAILS_REQUEST,\r\n\tORDER_DETAILS_SUCCESS,\r\n\tORDER_LIST_FAIL,\r\n\tORDER_LIST_MY_FAIL,\r\n\tORDER_LIST_MY_REQUEST,\r\n\tORDER_LIST_MY_SUCCESS,\r\n\tORDER_LIST_REQUEST,\r\n\tORDER_LIST_SUCCESS,\r\n\tORDER_PAY_FAIL,\r\n\tORDER_PAY_REQUEST,\r\n\tORDER_PAY_SUCCESS,\r\n} from \"../constants/orderconstants\";\r\n\r\nexport const CreateOrder = (order) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { token } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: token,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`/orders`, order, config);\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { token } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: token,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/orders/${id}`, config);\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\t\t});\r\n\t}\r\n};\r\nexport const payOrder = (orderId, paymentResult, userid) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_PAY_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { token } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: token,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(`/orders/${orderId}/pay?id=${userid}`, paymentResult, config);\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_PAY_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_PAY_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { token } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: token,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/orders/myorders`, config);\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { token } = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: token,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/orders/`, config);\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\t\t});\r\n\t}\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}