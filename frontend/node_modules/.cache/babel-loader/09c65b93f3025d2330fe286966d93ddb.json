{"ast":null,"code":"export const filterNames = new Set([\"first\", \"last\", \"eq\", \"gt\", \"nth\", \"lt\", \"even\", \"odd\"]);\nexport function isFilter(s) {\n  if (s.type !== \"pseudo\") return false;\n  if (filterNames.has(s.name)) return true;\n  if (s.name === \"not\" && Array.isArray(s.data)) {\n    // Only consider `:not` with embedded filters\n    return s.data.some(s => s.some(isFilter));\n  }\n  return false;\n}\nexport function getLimit(filter, data, partLimit) {\n  const num = data != null ? parseInt(data, 10) : NaN;\n  switch (filter) {\n    case \"first\":\n      return 1;\n    case \"nth\":\n    case \"eq\":\n      return isFinite(num) ? num >= 0 ? num + 1 : Infinity : 0;\n    case \"lt\":\n      return isFinite(num) ? num >= 0 ? Math.min(num, partLimit) : Infinity : 0;\n    case \"gt\":\n      return isFinite(num) ? Infinity : 0;\n    case \"odd\":\n      return 2 * partLimit;\n    case \"even\":\n      return 2 * partLimit - 1;\n    case \"last\":\n    case \"not\":\n      return Infinity;\n  }\n}","map":{"version":3,"sources":["positionals.ts"],"names":[],"mappings":"AAYA,OAAO,MAAM,WAAW,GAAgB,IAAI,GAAG,CAAS,CACpD,OAAO,EACP,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,MAAM,EACN,KAAK,CACR,CAAC;AAOF,OAAM,SAAU,QAAQ,CAAC,CAAW,EAAA;EAChC,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE,OAAO,KAAK;EACrC,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI;EACxC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;IAC3C;IACA,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAE,CAAC,IAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9C;EAED,OAAO,KAAK;AAChB;AAEA,OAAM,SAAU,QAAQ,CACpB,MAAc,EACd,IAAmB,EACnB,SAAiB,EAAA;EAEjB,MAAM,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG;EAEnD,QAAQ,MAAM;IACV,KAAK,OAAO;MACR,OAAO,CAAC;IACZ,KAAK,KAAK;IACV,KAAK,IAAI;MACL,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAI,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,QAAQ,GAAI,CAAC;IAC9D,KAAK,IAAI;MACL,OAAO,QAAQ,CAAC,GAAG,CAAC,GACd,GAAG,IAAI,CAAC,GACJ,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,GACxB,QAAQ,GACZ,CAAC;IACX,KAAK,IAAI;MACL,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC;IACvC,KAAK,KAAK;MACN,OAAO,CAAC,GAAG,SAAS;IACxB,KAAK,MAAM;MACP,OAAO,CAAC,GAAG,SAAS,GAAG,CAAC;IAC5B,KAAK,MAAM;IACX,KAAK,KAAK;MACN,OAAO,QAAQ;EAAC;AAE5B","sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio-select/ef063a6ca4c3f0d02d2fc3505e750b6fb81c448d/src/","sourcesContent":["export const filterNames = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\",\n]);\nexport function isFilter(s) {\n    if (s.type !== \"pseudo\")\n        return false;\n    if (filterNames.has(s.name))\n        return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) {\n        // Only consider `:not` with embedded filters\n        return s.data.some((s) => s.some(isFilter));\n    }\n    return false;\n}\nexport function getLimit(filter, data, partLimit) {\n    const num = data != null ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;\n        case \"lt\":\n            return isFinite(num)\n                ? num >= 0\n                    ? Math.min(num, partLimit)\n                    : Infinity\n                : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\n//# sourceMappingURL=positionals.js.map"]},"metadata":{},"sourceType":"module"}